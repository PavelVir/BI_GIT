
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Тип1 = "Ресурсы";
	тип2 = "Номенклатура";
	Объект.КоэфициентПересчета = 1;
	
	ЭлементОтбора = Реквизит1.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Наименование");
    ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСписке;
    ЭлементОтбора.Использование = Ложь;
    ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	
	ЭлементОтбора = Реквизит2.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Наименование");
    ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВСписке;
    ЭлементОтбора.Использование = Ложь;
    ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	//ЭлементОтбора.ПравоеЗначение = Объект.ФизЛицо;
	
КонецПроцедуры

&НаКлиенте
Процедура Тип1ПриИзменении(Элемент)
	ЗначениеТекста = (Тип1);
	
	//Если ЗначениеТекста = "Виды работ" тогда
	//	ЗначениеТекста = "ИНАГРО_ВидыРабот";
	//Иначе
	//	ЗначениеТекста = "СМ_Ресурсы";
	//КонецЕсли;
	
	Тип1ПриИзмененииНаСервере(ЗначениеТекста);
	Элементы.Реквизит1.Обновить();
	Оповестить("ОбновитьДС");
	
	//Если Тип1 = "ИНАГРО_ВидыРабот" Тогда
	//	тип2 = "Номенклатура";
	//	Тип2ПриИзмененииНаСервере("Номенклатура");
	//	Элементы.Реквизит2.Обновить();
	//    Оповестить("ОбновитьДС");
	//КонецЕсли;	
	//
	Если Тип1 = "СМ_НормативныеСборники" Тогда
		тип2 = "Номенклатура";
		Тип2ПриИзмененииНаСервере("Номенклатура");
		Элементы.Реквизит2.Обновить();
	    Оповестить("ОбновитьДС");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура Тип1ПриИзмененииНаСервере(ИмяСправочника)
    
	 Реквизит1.ОсновнаяТаблица =  "Справочник."+ИмяСправочника;
	 
КонецПроцедуры

&НаКлиенте
Процедура Несоответствующие(Команда)
	
	СтрокаСопоставленых = НесоответствующиеНаСервере();
	СтрокаСопоставленых2 = НесоответствующиеНаСервере2();
	Если Реквизит1.Отбор.Элементы[0].Использование = Истина тогда
		Реквизит1.Отбор.Элементы[0].Использование = Ложь;
	Иначе 	
		Реквизит1.Отбор.Элементы[0].Использование = Истина;
		Реквизит1.Отбор.Элементы[0].ПравоеЗначение = СтрокаСопоставленых;
	КонецЕсли;
	
	Если Реквизит2.Отбор.Элементы[0].Использование = Истина тогда
		Реквизит2.Отбор.Элементы[0].Использование = Ложь;
	Иначе 	
		Реквизит2.Отбор.Элементы[0].Использование = Истина;
		Реквизит2.Отбор.Элементы[0].ПравоеЗначение = СтрокаСопоставленых2;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция  НесоответствующиеНаСервере()
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_СоответствияЭлементовСправочниковСрезПоследних.Элемент1
		|ИЗ
		|	РегистрСведений.ИНАГРО_СоответствияЭлементовСправочников.СрезПоследних КАК ИНАГРО_СоответствияЭлементовСправочниковСрезПоследних
		|
		|СГРУППИРОВАТЬ ПО
		|	ИНАГРО_СоответствияЭлементовСправочниковСрезПоследних.Элемент1";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	СтрокаСопоставленых = Новый СписокЗначений;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СтрокаСопоставленых.Добавить(ВыборкаДетальныеЗаписи.Элемент1.Наименование);
	КонецЦикла;
	Возврат СтрокаСопоставленых;
	
КонецФункции

&НаСервере
Функция  НесоответствующиеНаСервере2()
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_СоответствияЭлементовСправочниковСрезПоследних.Элемент2
		|ИЗ
		|	РегистрСведений.ИНАГРО_СоответствияЭлементовСправочников.СрезПоследних КАК ИНАГРО_СоответствияЭлементовСправочниковСрезПоследних
		|
		|СГРУППИРОВАТЬ ПО
		|	ИНАГРО_СоответствияЭлементовСправочниковСрезПоследних.Элемент2";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	СтрокаСопоставленых = Новый СписокЗначений;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СтрокаСопоставленых.Добавить(ВыборкаДетальныеЗаписи.Элемент2.Наименование);
	КонецЦикла;
	Возврат СтрокаСопоставленых;
	
КонецФункции

&НаКлиенте
Процедура ПоискПоРеквизиту(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВсе(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура Установить(Команда)
	
	Если Элементы.Реквизит1.ТекущаяСтрока = Неопределено тогда 
		Сообщить("Не выбрана строка из первой таблицы");
	ИначеЕсли Элементы.Реквизит2.ТекущаяСтрока = Неопределено тогда 
		Сообщить("Не выбрана строка из второй таблицы");
	Иначе 
		Для каждого СтрокаВторойТаблицы из Элементы.Реквизит2.ВыделенныеСтроки Цикл
			Если Объект.КоэфициентПересчета = 0 тогда
				//Оповещение = Новый ОписаниеОповещения("ВводЧислаЗавершение", ЭтотОбъект); 
				//ПоказатьВводЧисла(Оповещение, 0, "Введите количество", 15, 3);
				Предупреждение("Укажите коэфициент пересчета для << " + Элементы.Реквизит1.ТекущаяСтрока +" >> - << " + СтрокаВторойТаблицы+" >>");
				//ПараметрыФормы = Новый Структура("Ключ", Объект); 
				//ОткрытьФорму("Справочник.Справочник1.Форма.Форма2", ПараметрыФормы);
				Форма2 = ПолучитьФорму("Обработка.ИНАГРО_СоответствиеЭлементовСправочников.Форма.Коэф",,ЭтаФорма);
				КопироватьДанныеФормы(Объект,Форма2.Объект);
				Форма2.Открытьмодально();
				//ОткрытьФормуМодально("Обработка.ИНАГРО_СоответствиеЭлементовСправочников.Форма.Коэф", ПараметрыФормы);
				ЗаписатьВРегистрНаСервере (Элементы.Реквизит1.ТекущаяСтрока,СтрокаВторойТаблицы,Форма2.Объект.КоэфициентПересчета);
				Объект.КоэфициентПересчета = 0;
			Иначе 
				ЗаписатьВРегистрНаСервере (Элементы.Реквизит1.ТекущаяСтрока,СтрокаВторойТаблицы,Объект.КоэфициентПересчета);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьВРегистрНаСервере (элемент1, элемент2,коэф);
	
	НоваяЗапись = РегистрыСведений.ИНАГРО_СоответствияЭлементовСправочников.СоздатьМенеджерЗаписи();
	НоваяЗапись.Элемент1 = элемент1;
	НоваяЗапись.Элемент2 = элемент2;
	Если ЗначениеЗаполнено(элемент1) тогда
		Попытка
			НоваяЗапись.ЕдиницаИзмерения1 = элемент1.ЕдиницаИзмерения;
		Исключение
			НоваяЗапись.ЕдиницаИзмерения1 = элемент1.ОсновнаяЕдиница;
		КонецПопытки;
	КонецЕсли;
	Попытка
		Попытка
			НоваяЗапись.ЕдиницаИзмерения2 = элемент2.ЕдиницаИзмерения;
		Исключение
			НоваяЗапись.ЕдиницаИзмерения2 = элемент2.ОсновнаяЕдиница;
		КонецПопытки;
	Исключение
	КонецПопытки;
	НоваяЗапись.Период = ТекущаяДата();
	НоваяЗапись.КоэффициентПересчета = коэф;
	НоваяЗапись.Активность = Истина;
	НоваяЗапись.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ВводЧислаЗавершение(Результат, ДополнительныеПараметры) Экспорт
    Если Результат<>Неопределено Тогда
		Объект.КоэфициентПересчета = Результат;
		//ЗаписатьВРегистрНаСервере (НовыеПараметры.Строка1,НовыеПараметры.Строка2,ВыбЗнач);
    КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Создать(Команда)
	Если Элементы.Реквизит1.ТекущаяСтрока = Неопределено тогда 
		Сообщить("Не выбрана строка из первой таблицы");
	Иначе
		Если ПроверитьНаСуществованиеЭлемента (Элементы.Реквизит1.ТекущаяСтрока,Тип2) тогда
			СоздатьНаСервереНовыйЭлемент(Элементы.Реквизит1.ТекущаяСтрока,Тип2);
			Элементы.Реквизит2.Обновить();
			Оповестить("ОбновитьДС");
			Сообщить("Создан новый " + НовыйЭлемент);

		Иначе 
			Сообщить("Имя занято " + НовыйЭлемент);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СоздатьНаСервереНовыйЭлемент(СтарыйЭлемент,Тип)
	
	НовыйЭлементСправочника =Справочники[Тип].СоздатьЭлемент();
	ЗаполнитьЗначенияСвойств(НовыйЭлементСправочника,СтарыйЭлемент,,"Владелец,Родитель");
	
	Если Тип1 = "СМ_Ресурсы" тогда
		Если Тип2 = "Номенклатура" тогда
			НовыйЭлементСправочника.ВидНоменклатуры = Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Стройматериалы");
			//НовыйЭлемент.рабо
			НовыйЭлементСправочника.НаименованиеПолное = СтарыйЭлемент.ДлинноеНаименование;
			НовыйЭлементСправочника.СтавкаНДС = Перечисления.СтавкиНДС.НДС18;
			НовыйЭлементСправочника.код = Неопределено;
		ИначеЕсли Тип2 = "Должности" тогда
			НовыйЭлементСправочника.ИНАГРО_СемействоДолжностей = Справочники.ИНАГРО_СемействоДолжностей.НайтиПоНаименованию("Рабочий");
			НовыйЭлементСправочника.ИНАГРО_УровеньДолжности = Справочники.ИНАГРО_УровеньДолжности.НайтиПоНаименованию("Неквалифицированные рабочие");
		КонецЕсли;
	КонецЕсли;
	НовыйЭлементСправочника.Записать();
	Если Тип2 = "Номенклатура" тогда
		 НоваяЕденицаИзмерения = Справочники.УпаковкиЕдиницыИзмерения.СоздатьЭлемент();
		 НоваяЕденицаИзмерения.Владелец = НовыйЭлементСправочника.Ссылка;
		 НоваяЕденицаИзмерения.Наименование = СтарыйЭлемент.ЕдиницаИзмерения.Наименование;
		 НоваяЕденицаИзмерения.Записать();
		 НовыйЭлементСправочника.ЕдиницаИзмерения = НоваяЕденицаИзмерения.Ссылка;
		 ш = 1;
	КонецЕсли;
	
	НовыйЭлементСправочника.Записать();
	
	НовыйЭлемент = НовыйЭлементСправочника.Ссылка;

КонецФункции

&НаСервере
Функция ПроверитьНаСуществованиеЭлемента(СтарыйЭлемент,Тип)
    НовыйЭлемент = Справочники[Тип].ПустаяСсылка();
	НовыйЭлемент = Справочники[Тип].НайтиПоНаименованию(СтарыйЭлемент);
	Если НовыйЭлемент <> Справочники[Тип].ПустаяСсылка() и НовыйЭлемент.Наименование = СтарыйЭлемент.Наименование тогда		
		Возврат Ложь;
	иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура Тип2ПриИзменении(Элемент)
	ЗначениеТекста = (Тип2);
	
	//Если ЗначениеТекста = "Ресурсы" тогда
	//	ЗначениеТекста = "СМ_ресурсы";
	//ИначеЕсли ЗначениеТекста = "Типы транспортных средств" тогда
	//	ЗначениеТекста = "ТипыТранспортныхСредств";	
	//КонецЕсли;	
	Тип2ПриИзмененииНаСервере(ЗначениеТекста);
	Элементы.Реквизит2.Обновить();
	Оповестить("ОбновитьДС");
	
КонецПроцедуры

&НаСервере
Процедура Тип2ПриИзмененииНаСервере(ИмяСправочника)

	 Реквизит2.ОсновнаяТаблица =  "Справочник."+ИмяСправочника;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)      
	
	Если ИмяСобытия = "ОбновитьДС" Тогда       
		Элементы.Реквизит2.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Команда1(Команда)
	//Команда1НаСервере();
	ОткрытьФорму("РегистрСведений.ИНАГРО_СоответствияЭлементовСправочников.ФормаСписка");
КонецПроцедуры

&НаСервереБезКонтекста
Функция Реквизит1ПриАктивизацииСтрокиНаСервере(Номенклатура)
	 	 	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_СоответствияЭлементовСправочниковСрезПоследних.Элемент2
		|ИЗ
		|	РегистрСведений.ИНАГРО_СоответствияЭлементовСправочников.СрезПоследних КАК ИНАГРО_СоответствияЭлементовСправочниковСрезПоследних
		|ГДЕ
		|	ИНАГРО_СоответствияЭлементовСправочниковСрезПоследних.Элемент1 = &Элемент1";
		
	Запрос.Параметры.Вставить("Элемент1", Номенклатура);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выгрузить();
	
	Список = ВыборкаДетальныеЗаписи.ВыгрузитьКолонку("Элемент2");
	
	Возврат Список;
    
КонецФункции

&НаКлиенте
Процедура Реквизит1ПриАктивизацииСтроки(Элемент)
	Список = Реквизит1ПриАктивизацииСтрокиНаСервере(Элементы.Реквизит1.ТекущаяСтрока);
	Реквизит4.Очистить();
	Для Каждого Строка Из Список Цикл
		НоваяСтрока = Реквизит4.Добавить();
		НоваяСтрока.Соответствие = Строка;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Реквизит3ПриАктивизацииСтроки(Элемент)
	//Если не Элементы.Реквизит3.ТекущиеДанные = Неопределено тогда
	//	Список = Реквизит1ПриАктивизацииСтрокиНаСервере(Элементы.Реквизит3.ТекущиеДанные.Соответствие);
	//	Реквизит4.Очистить();
	//	Для Каждого Строка Из Список Цикл
	//		НоваяСтрока = Реквизит4.Добавить();
	//		НоваяСтрока.Соответствие = Строка;
	//	КонецЦикла;	
	//КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура Реквизит2ПриАктивизацииСтроки(Элемент)
	
	Список = Реквизит3ПриАктивизацииСтрокиНаСервере(Элементы.Реквизит2.ТекущаяСтрока);
	Реквизит3.Очистить();
	Для Каждого Строка Из Список Цикл
		НоваяСтрока = Реквизит3.Добавить();
		НоваяСтрока.Соответствие = Строка;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура Реквизит4ПриАктивизацииСтроки(Элемент)
//	Если Реквизит4.Количество() > 0 тогда
//	Список = Реквизит3ПриАктивизацииСтрокиНаСервере(Элементы.Реквизит4.ТекущиеДанные.Соответствие);
//	Реквизит3.Очистить();
//	Для Каждого Строка Из Список Цикл
//		НоваяСтрока = Реквизит3.Добавить();
//		НоваяСтрока.Соответствие = Строка;
//	КонецЦикла;	
//КонецЕсли;	
КонецПроцедуры

&НаСервереБезКонтекста
Функция Реквизит3ПриАктивизацииСтрокиНаСервере(Номенклатура)
	 	 	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИНАГРО_СоответствияЭлементовСправочниковСрезПоследних.Элемент1
		|ИЗ
		|	РегистрСведений.ИНАГРО_СоответствияЭлементовСправочников.СрезПоследних КАК ИНАГРО_СоответствияЭлементовСправочниковСрезПоследних
		|ГДЕ
		|	ИНАГРО_СоответствияЭлементовСправочниковСрезПоследних.Элемент2 = &Элемент1";
		
	Запрос.Параметры.Вставить("Элемент1", Номенклатура);
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выгрузить();
	
	Список = ВыборкаДетальныеЗаписи.ВыгрузитьКолонку("Элемент1");
	
	Возврат Список;
    
КонецФункции

&НаКлиенте
Процедура ОткрытьНовый(Команда)
	ОткрытьЗначение(НовыйЭлемент);
КонецПроцедуры

&НаКлиенте
Процедура Тип2НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если Тип1 = "СМ_Ресурсы" тогда 
		Элемент.СписокВыбора.очистить();
		Элемент.СписокВыбора.Добавить("Номенклатура", "Номенклатура");
		Элемент.СписокВыбора.Добавить("Должности", "Должности");
		Элемент.СписокВыбора.Добавить("СМ_Ресурсы", "Ресурсы");
		Элемент.СписокВыбора.Добавить("ТипыТранспортныхСредств", "Типы транспортных средств");
	Иначе 
		Элемент.СписокВыбора.очистить();
		Элемент.СписокВыбора.Добавить("Номенклатура", "Номенклатура");
		//Элемент.СписокВыбора.Добавить("ИНАГРО_ВидыРабот", "Виды работ");
		Элемент.СписокВыбора.Добавить("СМ_НормативныеСборники", "Виды работ");
	КонецЕсли

КонецПроцедуры

&НаКлиенте
Процедура Тип1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Элемент.СписокВыбора.очистить();
	Элемент.СписокВыбора.Добавить("СМ_Ресурсы", "Ресурсы");
	//Элемент.СписокВыбора.Добавить("ИНАГРО_ВидыРабот", "Виды работ");
	Элемент.СписокВыбора.Добавить("СМ_НормативныеСборники", "Виды работ");
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
 КонецПроцедуры
