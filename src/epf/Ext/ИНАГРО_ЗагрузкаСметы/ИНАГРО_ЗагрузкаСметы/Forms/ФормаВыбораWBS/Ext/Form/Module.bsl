
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Проект") Тогда
		Проект =  Параметры.Проект;
	КонецЕсли;
  		
	Если Параметры.Свойство("ВидРаботы") Тогда
		ВидРаботы =  Параметры.ВидРаботы;
	КонецЕсли;
 			
	Если Параметры.Свойство("ОбъемКРаспределению") Тогда
		ОбъемКРаспределению =  Параметры.ОбъемКРаспределению;
	КонецЕсли;
 	
	Если Параметры.Свойство("СтруктураУГПР") Тогда
		
		СтруктураУГПР.Загрузить(Параметры.СтруктураУГПР.выгрузить());
		
		СтруктураУГПР_в_ДЗСервер();
 
 	КонецЕсли;
  	
КонецПроцедуры

&НаКлиенте
Процедура РаботыВидРаботыПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Работы.ТекущиеДанные;

КонецПроцедуры

&НаСервере
Процедура СтруктураУГПР_в_ДЗСервер()
	
	тДерево = РеквизитФормыВЗначение("РаботыДЗ2");
 	тДерево.Строки.Очистить();
	
	ПреобразоватьВДЗРекурсия(тДерево, СтруктураУГПР,  "00000000-0000-0000-0000-000000000000");
	
	ЗначениеВРеквизитФормы(тДерево, "РаботыДЗ2");

КонецПроцедуры

&НаСервере
Процедура ПреобразоватьВДЗРекурсия(тДерево, тТаблица, ГУИД)
	
	тПоиск = Новый Структура("КлючСвязи", ГУИД);
	тМассив = тТаблица.НайтиСтроки(тПоиск);
	
	Для Каждого тСтр Из тМассив Цикл

 		новСтр = тДерево.Строки.Добавить();
		
		новСтр.Картинка = ?(тСтр.ЭтоРабота, 5, 0);
        новСтр.Картинка = ?(тСтр.ЭтоМатериал, 3, новСтр.Картинка);
		
		ЗаполнитьЗначенияСвойств(новСтр, тСтр);
		
		ПреобразоватьВДЗРекурсия(новСтр, тТаблица, тСтр.КлючСтроки);

	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура РаботыДЗ2ВыборПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.РаботыДЗ2.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		
		СтартоваяСтрока = ТекущиеДанные.ПолучитьИдентификатор();
    		
	 	ВыборРекурсивно(РаботыДЗ2, ТекущиеДанные.Выбор, СтартоваяСтрока, ложь );
		
		ОбновитьРасчеты();
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Функция ВыборРекурсивно(тДерево, Выбор, СтартоваяСтрока, НачатьОтметку)
	
	Строки =  тДерево.ПолучитьЭлементы();
	
	Для каждого СтрокаДерева Из  Строки Цикл
		
		Если СтрокаДерева.ПолучитьИдентификатор() = СтартоваяСтрока Тогда
			НачатьОтметку = Истина;
		КонецЕсли;
		
		Если  НачатьОтметку Тогда
			СтрокаДерева.Выбор =  Выбор;
			Если не Выбор  Тогда
				СтрокаДерева.ФизОбъем = 0;
				СтрокаДерева.РаспределениеСметнойСтоимости = 0;
			КонецЕсли;
		КонецЕсли;
		
		ВыборРекурсивно(СтрокаДерева, Выбор, СтартоваяСтрока, НачатьОтметку);

		Если СтрокаДерева.ПолучитьИдентификатор() = СтартоваяСтрока Тогда
			НачатьОтметку = Ложь;
		КонецЕсли;
						
	КонецЦикла;

КонецФункции

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	тЭлементы = РаботыДЗ2.ПолучитьЭлементы();
	
	Для Каждого тСтр Из тЭлементы Цикл
		Элементы.РаботыДЗ2.Развернуть(тСтр.ПолучитьИдентификатор(), Истина);
	КонецЦикла;
	
	 УстВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьИЗакрыть(Команда)
	
	  Закрыть(СформироватьРезультат());
	
КонецПроцедуры

&НаКлиенте
Функция СформироватьРезультат()

	СтруктураРезультата = Новый Соответствие;

	СтруктураРезультата = ПеребратьДеревоРекурсивно(РаботыДЗ2, СтруктураРезультата);
	
	Возврат СтруктураРезультата;

КонецФункции

&НаКлиенте
Функция ПеребратьДеревоРекурсивно(тДерево, СтруктураРезультата)
	
	Строки =  тДерево.ПолучитьЭлементы();
	
	Для каждого СтрокаДерева Из  Строки Цикл
		
		Если  СтрокаДерева.Выбор и СтрокаДерева.ЭтоРабота Тогда
			
			Если СпособРаспределения=0 Тогда
				СтруктураРезультата.Вставить(СтрокаДерева.КлючСтроки, СтрокаДерева.ФизОбъем);
			ИначеЕсли СпособРаспределения=1 Тогда
				СтруктураРезультата.Вставить(СтрокаДерева.КлючСтроки, СтрокаДерева.РаспределениеСметнойСтоимости);
			ИначеЕсли СпособРаспределения=2 Тогда
				СтруктураРезультата.Вставить(СтрокаДерева.КлючСтроки, СтрокаДерева.ОбъемРабот);
			КонецЕсли;

		КонецЕсли;
		
		ПеребратьДеревоРекурсивно(СтрокаДерева, СтруктураРезультата);
  						
	КонецЦикла;
	
	Возврат  СтруктураРезультата;
 	
КонецФункции

&НаКлиенте
Процедура ОбновитьРасчеты()
	
	КвоРабот = ОбновитьРасчетыРекурсивно(РаботыДЗ2, 0);
	
	СтрокаШаблон =   "Выбрано: %1% работ";
 	
	Элементы.ДекорацияКвоВыбраноРабот.Заголовок = СтрЗаменить(СтрокаШаблон, "%1%", КвоРабот);

КонецПроцедуры

&НаКлиенте
Функция ОбновитьРасчетыРекурсивно(тДерево, КвоРабот=0)
	
 	Строки =  тДерево.ПолучитьЭлементы();
	
	Для каждого СтрокаДерева Из  Строки Цикл
		
		Если  СтрокаДерева.Выбор  и СтрокаДерева.ЭтоРабота Тогда
			КвоРабот = КвоРабот + 1;
		КонецЕсли;
		
		ОбновитьРасчетыРекурсивно(СтрокаДерева, КвоРабот);
		
	КонецЦикла;
	
	Возврат  КвоРабот;

КонецФункции

&НаКлиенте
Процедура УстВидимость()
	
	Элементы.РаботыДЗ2ФизОбъем.Видимость = (СпособРаспределения=0);
	Элементы.РаботыДЗ2РаспределениеСметнойСтоимости.Видимость = (СпособРаспределения=1);
	Элементы.ОбъемРаспределенный.Видимость = (СпособРаспределения=0);
	Элементы.РаботыДЗ2Выбор.Видимость = (СпособРаспределения=2);
	
КонецПроцедуры

&НаКлиенте
Процедура СпособРаспределенияПриИзменении(Элемент)
	 УстВидимость()
КонецПроцедуры

&НаКлиенте
Процедура РаботыДЗ2ФизОбъемыПриИзменении(Элемент)
	
	ТекущиеДанные =  Элементы.РаботыДЗ2.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если ТекущиеДанные.ЭтоРабота и ТекущиеДанные.ФизОбъем > 0  Тогда
		ТекущиеДанные.Выбор = Истина;
	иначе
		ТекущиеДанные.Выбор = Ложь;
	КонецЕсли;

 	РасчетОбъема();

 	ОстатокОбъема = ОбъемКРаспределению - ОбъемРаспределенный;
	
	Если  ОстатокОбъема < 0 Тогда
		ТекущиеДанные.ФизОбъем = Макс(ТекущиеДанные.ФизОбъем + ОстатокОбъема, 0);
	КонецЕсли;

	// обьем мог изменится
	Если ТекущиеДанные.ЭтоРабота и ТекущиеДанные.ФизОбъем > 0  Тогда
		ТекущиеДанные.Выбор = Истина;
	иначе
		ТекущиеДанные.Выбор = Ложь;
	КонецЕсли;

	РасчетОбъема();
	
	ОбновитьРасчеты();
	
КонецПроцедуры

&НаКлиенте
Процедура РасчетОбъема()
	ОбъемРаспределенный = 0;
	РасчетОбъемаРекурсивно(РаботыДЗ2);
КонецПроцедуры

     &НаКлиенте
Функция РасчетОбъемаРекурсивно(тДерево)
	
 	Строки =  тДерево.ПолучитьЭлементы();
	
	Для каждого СтрокаДерева Из  Строки Цикл
		
		Если  СтрокаДерева.Выбор и СтрокаДерева.ЭтоРабота Тогда
			ОбъемРаспределенный = ОбъемРаспределенный + СтрокаДерева.ФизОбъем;
		КонецЕсли;
		
		РасчетОбъемаРекурсивно(СтрокаДерева);
		
	КонецЦикла;

КонецФункции

&НаКлиенте
Процедура РаботыДЗ2ПриАктивизацииЯчейки(Элемент)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	ТекущееПоле = Элемент.ТекущийЭлемент;
	
	УстановитьДоступностьРеквизитов(Элемент, ТекущиеДанные, ТекущееПоле)
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьРеквизитов(Элемент, ТекущиеДанные, ТекущееПоле)
	
	Если ТекущееПоле = Неопределено Тогда
		Возврат;
	КонецЕсли;

	СтруктураТолькоЧтение = Новый Структура;
 	СтруктураТолькоЧтение.Вставить(Элемент.Имя + "РаспределениеСметнойСтоимости", не ТекущиеДанные.ЭтоРабота);
 	СтруктураТолькоЧтение.Вставить(Элемент.Имя + "ФизОбъем", не ТекущиеДанные.ЭтоРабота);
	
	СтруктураТолькоЧтение.Вставить(Элемент.Имя + "ВидРаботы", Истина);
	СтруктураТолькоЧтение.Вставить(Элемент.Имя + "ОбъемРабот", Истина);
	СтруктураТолькоЧтение.Вставить(Элемент.Имя + "ЕдиницаИзмерения", Истина);
	
	ТолькоЧтение = Истина;
	
	Если СтруктураТолькоЧтение.Свойство(ТекущееПоле.Имя, ТолькоЧтение) Тогда
		
		ТекущееПоле.ТолькоПросмотр = ТолькоЧтение;
		
	иначе // СтруктураТолькоЧтение.Свойство(ТекущееПоле.Имя, ТолькоЧтение)
		
		ТекущееПоле.ТолькоПросмотр = Ложь;
		
	КонецЕсли; // СтруктураТолькоЧтение.Свойство(ТекущееПоле.Имя, ТолькоЧтение)

КонецПроцедуры

&НаКлиенте
Процедура РаботыДЗ2РаспределениеСметнойСтоимостиПриИзменении(Элемент)
	
	ТекущиеДанные =  Элементы.РаботыДЗ2.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если ТекущиеДанные.ЭтоРабота и ТекущиеДанные.РаспределениеСметнойСтоимости > 0  Тогда
		ТекущиеДанные.Выбор = Истина;
	иначе
		ТекущиеДанные.Выбор = Ложь;
	КонецЕсли;
	
	ОбновитьРасчеты();

КонецПроцедуры

 