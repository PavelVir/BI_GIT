&НаКлиенте
Перем ПараметрыОбработчика;

#Область ОбработчикиКнопоКоманднойПанели

&НаКлиенте
Процедура ВыгрузитьКлассификаторы(Команда)
	ФоновоеЗаданиеЗапуститьНаКлиенте(Команда);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	Если Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаДлительнаяОперация Тогда
		Отказ = Истина;
		ОтключитьОбработчикОжидания("ФоновоеЗаданиеПроверитьНаКлиенте");
		Обработчик = Новый ОписаниеОповещения("ПередЗакрытиемОтветНаВопрос", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Выгрузка классификтаторов еще выполняется.
								|Прервать?'");
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Прервать);
		Кнопки.Добавить(КодВозвратаДиалога.Пропустить, НСтр("ru = 'Не прерывать'"));
		ПоказатьВопрос(Обработчик, ТекстВопроса, Кнопки, 60, КодВозвратаДиалога.Пропустить);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемОтветНаВопрос(Ответ, ПараметрыВыполнения) Экспорт
	Если Ответ = КодВозвратаДиалога.Прервать Тогда
		Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаПустая; // Чтобы пропустить вопрос.
		Закрыть(); // Отмена фонового задания выполняется в обработчике ПриЗакрытии().
	Иначе
		ФоновоеЗаданиеПроверитьНаКлиенте();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	Если ФоновоеЗаданиеИдентификатор <> Неопределено Тогда
		ФоновоеЗаданиеОтменить(ФоновоеЗаданиеИдентификатор);
		ФоновоеЗаданиеИдентификатор = Неопределено;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область РаботаСДлительнымиОперациями

////////////////////////////////////////////////////////////////////////////////
// Клиент

&НаКлиенте
Процедура ФоновоеЗаданиеПроверитьНаКлиенте()
	Результат = ФоновоеЗаданиеПолучитьРезультат();
	Если Результат.ФоновоеЗаданиеВыполнено Тогда
		СтандартныеПодсистемыКлиент.ПоказатьРезультатВыполнения(ЭтотОбъект, Результат);
		Элементы.СтраницыФормы.ТекущаяСтраница = Элементы.СтраницаПустая;
	Иначе
		ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчика);
		ПодключитьОбработчикОжидания("ФоновоеЗаданиеПроверитьНаКлиенте", ПараметрыОбработчика.ТекущийИнтервал, Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ФоновоеЗаданиеЗапуститьНаКлиенте(Действие)
	ПараметрыЗадания = Новый Структура;
	ПараметрыЗадания.Вставить("ВыгружатьРесурсы", ВыгружатьКлассификаторРесурсов);
	ПараметрыЗадания.Вставить("ВыгружатьРаботы", ВыгружатьКлассификаторВидовРабот);
	ПараметрыЗадания.Вставить("ВыгружатьЕдиницыИзмерения", ВыгружатьКлассификаторЕдиницИзмерения);
	ПараметрыЗадания.Вставить("ВыгружатьКлассификаторПроектов", ВыгружатьКлассификаторПроектов);
	
	
	Результат = ФоновоеЗаданиеЗапустить(ПараметрыЗадания);
	Если Результат.ФоновоеЗаданиеЗапущено Тогда
		ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчика);
		ПодключитьОбработчикОжидания("ФоновоеЗаданиеПроверитьНаКлиенте", 1, Истина);
		ПараметрыОбработчика.МаксимальныйИнтервал = 5;
	ИначеЕсли НЕ Результат.ФоновоеЗаданиеЗавершено Тогда
		СтандартныеПодсистемыКлиентСервер.ВывестиПредупреждение(
			Результат,
			НСтр("ru = 'Не удалось запустить выгрузку классификаторов'"),
			//Результат.ТекстОшибкиУстановкиМонопольногоРежима
			);
	КонецЕсли;
	СтандартныеПодсистемыКлиент.ПоказатьРезультатВыполнения(ЭтотОбъект, Результат);
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// Вызов сервера, Сервер

&НаСервере
Процедура ФоновоеЗаданиеПоказатьСтраницуДлительнойОперации(ПараметрыЗадания)
	
	ПоказыватьБублик = Ложь;
	
	Элементы.ФоновоеЗаданиеАнимация.Видимость = ПоказыватьБублик;
	Элементы.ФоновоеЗаданиеПроцент.Видимость  = Не ПоказыватьБублик;
	Элементы.СтраницыФормы.ТекущаяСтраница    = Элементы.СтраницаДлительнаяОперация;
	
	Элементы.ФоновоеЗаданиеСостояние.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Центр;
	
КонецПроцедуры

&НаСервере
Процедура ФоновоеЗаданиеПрочитатьПромежуточныйРезультат(Результат)
	Прогресс = ДлительныеОперации.ПрочитатьПрогресс(ФоновоеЗаданиеИдентификатор);
	Если Прогресс <> Неопределено Тогда
		ФоновоеЗаданиеПроцент   = Прогресс.Процент;
		ФоновоеЗаданиеСостояние = Прогресс.Текст;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ФоновоеЗаданиеЗагрузитьРезультат(Результат)
	
	// Получение результата.
	РезультатВыполненияВФоне = ПолучитьИзВременногоХранилища(ФоновоеЗаданиеАдресХранилища);
	Если РезультатВыполненияВФоне = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если РезультатВыполненияВФоне.Свойство("Шаги") Тогда
		Результат.Вставить("Шаги", РезультатВыполненияВФоне.Шаги);
	КонецЕсли;
	
	УдалитьИзВременногоХранилища(ФоновоеЗаданиеАдресХранилища);
	ФоновоеЗаданиеАдресХранилища = Неопределено;
	ФоновоеЗаданиеИдентификатор  = Неопределено;
КонецПроцедуры

&НаСервере
Функция ФоновоеЗаданиеПолучитьРезультат()
	Результат = Новый Структура;
	Результат.Вставить("ФоновоеЗаданиеВыполнено", Ложь);
	Результат.ФоновоеЗаданиеВыполнено = ДлительныеОперации.ЗаданиеВыполнено(ФоновоеЗаданиеИдентификатор);
	Если Результат.ФоновоеЗаданиеВыполнено Тогда
		ФоновоеЗаданиеЗагрузитьРезультат(Результат);
	Иначе
		ФоновоеЗаданиеПрочитатьПромежуточныйРезультат(Результат);
	КонецЕсли;
	Возврат Результат;
КонецФункции

&НаСервере
Функция ФоновоеЗаданиеЗапустить(Знач ПараметрыЗадания)
	Результат = Новый Структура;
	Результат.Вставить("ФоновоеЗаданиеЗапущено", Ложь);
	Результат.Вставить("ФоновоеЗаданиеЗавершено", Ложь);
	//Результат.Вставить("ТекстОшибкиУстановкиМонопольногоРежима", "Не удалось установить монопольный режим");
	
	// Запуск фонового задания
	РезультатФоновогоЗадания = ДлительныеОперации.ЗапуститьВыполнениеВФоне(
		УникальныйИдентификатор,
		"Обработки.ИНАГРО_ИнтеграцияPrimavera.ВыгрузитьКлассификаторы",
		ПараметрыЗадания,
		НСтр("ru = 'Выгрузка классификаторов'"));
	
	ФоновоеЗаданиеИдентификатор  = РезультатФоновогоЗадания.ИдентификаторЗадания;
	ФоновоеЗаданиеАдресХранилища = РезультатФоновогоЗадания.АдресХранилища;
	
	Если РезультатФоновогоЗадания.ЗаданиеВыполнено Тогда
		ФоновоеЗаданиеЗагрузитьРезультат(Результат);
		Результат.ФоновоеЗаданиеЗапущено = Ложь;
		Результат.ФоновоеЗаданиеЗавершено = Истина;
	Иначе
		ФоновоеЗаданиеПоказатьСтраницуДлительнойОперации(ПараметрыЗадания);
		ФоновоеЗаданиеПрочитатьПромежуточныйРезультат(Результат);
		Результат.ФоновоеЗаданиеЗапущено = Истина;
		Результат.ФоновоеЗаданиеЗавершено = Ложь;
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

&НаСервереБезКонтекста
Процедура ФоновоеЗаданиеОтменить(Знач ФоновоеЗаданиеИдентификатор)
	ДлительныеОперации.ОтменитьВыполнениеЗадания(ФоновоеЗаданиеИдентификатор);
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//{{ BI-Digital: Кашкинбаев Т.А. по заявке 170805 от 21.06.2018 11:00
	Обработки.ИНАГРО_ИнтеграцияPrimavera.ПроверитьСтрокуСоединения();
	//}} BI-Digital: Кашкинбаев Т.А. по заявке 170805 от 21.06.2018 11:00
КонецПроцедуры


#КонецОбласти
