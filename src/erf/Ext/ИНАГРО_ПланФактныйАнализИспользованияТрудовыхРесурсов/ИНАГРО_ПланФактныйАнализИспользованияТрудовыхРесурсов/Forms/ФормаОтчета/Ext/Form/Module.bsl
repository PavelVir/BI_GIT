&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	Период.ДатаНачала = НачалоМесяца(Период.ДатаНачала);
	Период.ДатаОкончания = КонецМесяца(Период.ДатаОкончания);
	УстановитьНастройки();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьНастройки()
	ПараметрДанных = Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("КонецПериода");
	ПараметрДанных.Значение = Период.ДатаОкончания;
	ПараметрДанных.Использование = Истина;
	
	ПараметрПользовательскойНастройки = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ПараметрДанных.ИдентификаторПользовательскойНастройки);
	ПараметрПользовательскойНастройки.Значение = Период.ДатаОкончания;
	ПараметрПользовательскойНастройки.Использование = Истина;

	ПараметрДанных = Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("НачалоПериода");
	ПараметрДанных.Значение = Период.ДатаНачала;
	ПараметрДанных.Использование = Истина;
	
	ПараметрПользовательскойНастройки = Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ПараметрДанных.ИдентификаторПользовательскойНастройки);
	ПараметрПользовательскойНастройки.Значение = Период.ДатаНачала;
	ПараметрПользовательскойНастройки.Использование = Истина;

КонецПроцедуры 

&НаСервере
Процедура УстановитьОтборы()
	НастройкиОтчета = Отчет.КомпоновщикНастроек.ПолучитьНастройки();
	Если ЗначениеЗаполнено(Проект) Тогда
		ЭлементОтбора = Неопределено;
		Для каждого СтрОтбор Из НастройкиОтчета.Отбор.Элементы Цикл
			Если СтрОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Проект") Тогда
				ЭлементОтбора = СтрОтбор;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если ЭлементОтбора = Неопределено Тогда
			ЭлементОтбора = НастройкиОтчета.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Проект");
		КонецЕсли;
		ЭлементОтбора.ВидСравнения 	 = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = Проект;
		ЭлементОтбора.Использование  = Истина;
	Иначе
		ЭлементОтбора = Неопределено;
		Для каждого СтрОтбор Из НастройкиОтчета.Отбор.Элементы Цикл
			Если СтрОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Проект") Тогда
				ЭлементОтбора = СтрОтбор;
			КонецЕсли;
		КонецЦикла;
		Если ЭлементОтбора <> Неопределено Тогда
			ЭлементОтбора.ПравоеЗначение = Справочники.Проекты.ПустаяСсылка();
			ЭлементОтбора.Использование  = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Конструктив) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ИНАГРО_УГПРРаботы.КлючСтроки
		               |ИЗ
		               |	РегистрСведений.ИНАГРО_УГПРРаботы КАК ИНАГРО_УГПРРаботы
		               |ГДЕ
		               |	ИНАГРО_УГПРРаботы.Проект = &Проект
		               |	И ИНАГРО_УГПРРаботы.ВидРаботы = &Конструктив
		               |	И ИНАГРО_УГПРРаботы.Версия.ВидВерсии = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_ВидВерсии.Рабочая)";
		Запрос.УстановитьПараметр("Проект", Проект);
		Запрос.УстановитьПараметр("Конструктив", Конструктив);
		Рез = Запрос.Выполнить().Выгрузить();
		Если Рез.Количество() = 0 тогда
			Сообщить("Не найден	ключ строки для указанного конструктива. Проверьте наличие документа УГПР с данным конструктивом!");
		Иначе
			КлючСтроки = Рез[0].КлючСтроки;
		КонецЕсли;
		
		СписокКлючей = ПолучитьМассивКлючейПодчиненных(КлючСтроки);
		
		ЭлементОтбора = Неопределено;
		Для каждого СтрОтбор Из НастройкиОтчета.Отбор.Элементы Цикл
			Если СтрОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("КлючСтроки") Тогда
				ЭлементОтбора = СтрОтбор;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если ЭлементОтбора = Неопределено Тогда
			ЭлементОтбора = НастройкиОтчета.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("КлючСтроки");
		КонецЕсли;
		ЭлементОтбора.ВидСравнения 	 = ВидСравненияКомпоновкиДанных.ВСписке;
		ЭлементОтбора.ПравоеЗначение = СписокКлючей;
		ЭлементОтбора.Использование  = Истина;
	Иначе
		ЭлементОтбора = Неопределено;
		Для каждого СтрОтбор Из НастройкиОтчета.Отбор.Элементы Цикл
			Если СтрОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("КлючСтроки") Тогда
				ЭлементОтбора = СтрОтбор;
			КонецЕсли;
		КонецЦикла;
		Если ЭлементОтбора <> Неопределено Тогда
			ЭлементОтбора.ПравоеЗначение = Новый Массив;
			ЭлементОтбора.Использование  = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Отчет.КомпоновщикНастроек.ЗагрузитьНастройки(НастройкиОтчета);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ДанныеРасшифровки = "" тогда
		
		Если Не ЗначениеЗаполнено(Период) Тогда
			Период.ДатаНачала = НачалоМесяца(ТекущаяДата());
			Период.ДатаОкончания = КонецМесяца(ТекущаяДата());
		КонецЕсли;
		УстановитьНастройки();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроектПриИзменении(Элемент)
	УстановитьОтборы();
КонецПроцедуры

&НаКлиенте
Процедура КонструктивПриИзменении(Элемент)
	УстановитьОтборы();
КонецПроцедуры

&НаСервере
Функция ПолучитьМассивКлючейПодчиненных(КлючРодитель)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ИНАГРО_УГПРРаботы.КлючСтроки,
	               |	ИНАГРО_УГПРРаботы.ЭтоРабота,
	               |	ИНАГРО_УГПРРаботы.КлючСвязи
	               |ИЗ
	               |	РегистрСведений.ИНАГРО_УГПРРаботы КАК ИНАГРО_УГПРРаботы
	               |ГДЕ
	               |	ИНАГРО_УГПРРаботы.Проект = &Проект
	               |	И ИНАГРО_УГПРРаботы.КлючСвязи = &КлючРодитель
	               |	И ИНАГРО_УГПРРаботы.Версия.ВидВерсии = ЗНАЧЕНИЕ(Перечисление.ИНАГРО_ВидВерсии.Рабочая)";
	Запрос.УстановитьПараметр("Проект", Проект);
	Запрос.УстановитьПараметр("КлючРодитель", КлючРодитель);
	Рез = Запрос.Выполнить().Выгрузить();
	
	СписокКлючей = Новый СписокЗначений;
	Для Каждого СтрРез из Рез цикл
		Если СтрРез.ЭтоРабота тогда
			СписокКлючей.Добавить(СтрРез.КлючСтроки);
		Иначе
			СписокПодчиненыхКлючей = ПолучитьМассивКлючейПодчиненных(СтрРез.КлючСтроки);
			Для Каждого КлючСтрокиПодчиненный из СписокПодчиненыхКлючей цикл
				СписокКлючей.Добавить(КлючСтрокиПодчиненный.Значение);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	Возврат СписокКлючей;
	
КонецФункции
