&НаКлиенте
Процедура ПериодПриИзменении(Элемент)
	Период.ДатаНачала = НачалоМесяца(Период.ДатаНачала);
	Период.ДатаОкончания = КонецМесяца(Период.ДатаОкончания);
	УстановитьНастройки();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьНастройки()
	ПараметрДанных = Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("КонецПериода");
	ПараметрДанных.Значение = Период.ДатаОкончания;
	ПараметрДанных.Использование = Истина;
	
	ПараметрДанных = Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("НачалоПериода");
	ПараметрДанных.Значение = Период.ДатаНачала;
	ПараметрДанных.Использование = Истина;
	
КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
КонецПроцедуры

&НаКлиенте
Процедура ПроектПриИзменении(Элемент)
	Версия = ПолучитьРабочуюВерсиюПроекта(Проект);
	УстановитьОтборы();
КонецПроцедуры

&НаКлиенте
Процедура ВерсияПриИзменении(Элемент)
	УстановитьОтборы();
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборы()
	Если ЗначениеЗаполнено(Проект) Тогда
		ЭлементОтбора = Неопределено;
		Для каждого СтрОтбор Из Отчет.КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
			Если СтрОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Проект") Тогда
				ЭлементОтбора = СтрОтбор;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если ЭлементОтбора = Неопределено Тогда
			ЭлементОтбора = Отчет.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Проект");
		КонецЕсли;
		ЭлементОтбора.ВидСравнения 	 = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = Проект;
		ЭлементОтбора.Использование  = Истина;
		// установим рабочую версию
		ЭлементОтбора = Неопределено;
		Для каждого СтрОтбор Из Отчет.КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
			Если СтрОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Версия") Тогда
				ЭлементОтбора = СтрОтбор;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если ЭлементОтбора = Неопределено Тогда
			ЭлементОтбора = Отчет.КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Версия");
		КонецЕсли;
		ЭлементОтбора.ВидСравнения 	 = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = Версия;
		ЭлементОтбора.Использование  = Истина;
	Иначе
		ЭлементОтбора = Неопределено;
		Для каждого СтрОтбор Из Отчет.КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
			Если СтрОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Проект") Тогда
				ЭлементОтбора = СтрОтбор;
			КонецЕсли;
		КонецЦикла;
		Если ЭлементОтбора <> Неопределено Тогда
			ЭлементОтбора.ПравоеЗначение = ПредопределенноеЗначение("Справочники.Проект.ПустаяСсылка");
			ЭлементОтбора.Использование  = Ложь;
		КонецЕсли;
		// установим рабочую версию
		ЭлементОтбора = Неопределено;
		Для каждого СтрОтбор Из Отчет.КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
			Если СтрОтбор.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Версия") Тогда
				ЭлементОтбора = СтрОтбор;
			КонецЕсли;
		КонецЦикла;
		Если ЭлементОтбора <> Неопределено Тогда
			ЭлементОтбора.ПравоеЗначение = ПредопределенноеЗначение("Справочник.ИНАГРО_Версия.ПустаяСсылка");
			ЭлементОтбора.Использование  = Ложь;
		КонецЕсли;
	КонецЕсли;
	Отчет.КомпоновщикНастроек.ЗагрузитьНастройки(Отчет.КомпоновщикНастроек.Настройки);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьРабочуюВерсиюПроекта(Проект)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ИНАГРО_Версия.Ссылка
	               |ИЗ
	               |	Справочник.ИНАГРО_Версия КАК ИНАГРО_Версия
	               |ГДЕ
	               |	ИНАГРО_Версия.ВидВерсии = &Рабочая
	               |	И ИНАГРО_Версия.Владелец = &Проект";
	Запрос.УстановитьПараметр("Проект", Проект);
	Запрос.УстановитьПараметр("Рабочая", Перечисления.ИНАГРО_ВидВерсии.Рабочая);
	
	Результат = Запрос.Выполнить().Выгрузить();
	Если Результат.Количество() =0 тогда
		Возврат Справочники.ИНАГРО_Версия.ПустаяСсылка();
	Иначе
		Возврат Результат[0].Ссылка;
	КонецЕсли;
КонецФункции

